{
  "_args": [
    [
      {
        "raw": "rollup-plugin-commonjs@8.0.2",
        "scope": null,
        "escapedName": "rollup-plugin-commonjs",
        "name": "rollup-plugin-commonjs",
        "rawSpec": "8.0.2",
        "spec": "8.0.2",
        "type": "version"
      },
      "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/@ionic/app-scripts"
    ]
  ],
  "_from": "rollup-plugin-commonjs@8.0.2",
  "_id": "rollup-plugin-commonjs@8.0.2",
  "_inCache": true,
  "_location": "/rollup-plugin-commonjs",
  "_nodeVersion": "7.2.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/rollup-plugin-commonjs-8.0.2.tgz_1489265275566_0.6398498867638409"
  },
  "_npmUser": {
    "name": "rich_harris",
    "email": "richard.a.harris@gmail.com"
  },
  "_npmVersion": "4.0.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "rollup-plugin-commonjs@8.0.2",
    "scope": null,
    "escapedName": "rollup-plugin-commonjs",
    "name": "rollup-plugin-commonjs",
    "rawSpec": "8.0.2",
    "spec": "8.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/@ionic/app-scripts"
  ],
  "_resolved": "https://registry.npmjs.org/rollup-plugin-commonjs/-/rollup-plugin-commonjs-8.0.2.tgz",
  "_shasum": "98b1589bfe32a6c0f67790b60c0b499972afed89",
  "_shrinkwrap": null,
  "_spec": "rollup-plugin-commonjs@8.0.2",
  "_where": "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/@ionic/app-scripts",
  "author": {
    "name": "Rich Harris"
  },
  "bugs": {
    "url": "https://github.com/rollup/rollup-plugin-commonjs/issues"
  },
  "dependencies": {
    "acorn": "^4.0.1",
    "estree-walker": "^0.3.0",
    "magic-string": "^0.19.0",
    "resolve": "^1.1.7",
    "rollup-pluginutils": "^2.0.1"
  },
  "description": "Convert CommonJS modules to ES2015",
  "devDependencies": {
    "buble": "^0.15.0",
    "eslint": "^3.5.0",
    "locate-character": "^2.0.0",
    "mocha": "^3.0.2",
    "rollup": "^0.40.2",
    "rollup-plugin-buble": "^0.15.0",
    "rollup-plugin-node-resolve": "^2.0.0",
    "rollup-watch": "^3.1.0",
    "source-map": "^0.5.6",
    "source-map-support": "^0.4.2"
  },
  "directories": {},
  "dist": {
    "shasum": "98b1589bfe32a6c0f67790b60c0b499972afed89",
    "tarball": "https://registry.npmjs.org/rollup-plugin-commonjs/-/rollup-plugin-commonjs-8.0.2.tgz"
  },
  "files": [
    "src",
    "dist",
    "README.md"
  ],
  "gitHead": "f71f57dce5cf986fa3d8f6fa896de90927179e71",
  "homepage": "https://github.com/rollup/rollup-plugin-commonjs",
  "jsnext:main": "dist/rollup-plugin-commonjs.es.js",
  "license": "MIT",
  "main": "dist/rollup-plugin-commonjs.cjs.js",
  "maintainers": [
    {
      "name": "rich_harris",
      "email": "richard.a.harris@gmail.com"
    },
    {
      "name": "trysound",
      "email": "trysound@yandex.ru"
    },
    {
      "name": "victorystick",
      "email": "victorystick@gmail.com"
    }
  ],
  "module": "dist/rollup-plugin-commonjs.es.js",
  "name": "rollup-plugin-commonjs",
  "optionalDependencies": {},
  "readme": "# rollup-plugin-commonjs [![Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/rollup/rollup-plugin-commonjs.svg\n[travis]: https://travis-ci.org/rollup/rollup-plugin-commonjs\n\nConvert CommonJS modules to ES6, so they can be included in a Rollup bundle\n\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-commonjs\n```\n\n\n## Usage\n\nTypically, you would use this plugin alongside [rollup-plugin-node-resolve](https://github.com/rollup/rollup-plugin-node-resolve), so that you could bundle your CommonJS dependencies in `node_modules`.\n\n```js\n// rollup.config.js\nimport commonjs from 'rollup-plugin-commonjs';\nimport nodeResolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  entry: 'main.js',\n  dest: 'bundle.js',\n  format: 'iife',\n  plugins: [\n    nodeResolve({\n      jsnext: true,\n      main: true\n    }),\n\n    commonjs({\n      // non-CommonJS modules will be ignored, but you can also\n      // specifically include/exclude files\n      include: 'node_modules/**',  // Default: undefined\n      exclude: [ 'node_modules/foo/**', 'node_modules/bar/**' ],  // Default: undefined\n\n      // search for files other than .js files (must already\n      // be transpiled by a previous plugin!)\n      extensions: [ '.js', '.coffee' ],  // Default: [ '.js' ]\n\n      // if true then uses of `global` won't be dealt with by this plugin\n      ignoreGlobal: false,  // Default: false\n\n      // if false then skip sourceMap generation for CommonJS modules\n      sourceMap: false,  // Default: true\n\n      // explicitly specify unresolvable named exports\n      // (see below for more details)\n      namedExports: { './module.js': ['foo', 'bar' ] },  // Default: undefined\n\n      // sometimes you have to leave require statements\n      // unconverted. Pass an array containing the IDs\n      // or a `id => boolean` function. Only use this\n      // option if you know what you're doing!\n      ignore: [ 'conditional-runtime-dependency' ]\n    })\n  ]\n};\n```\n\n### Custom named exports\n\nThis plugin will attempt to create named exports, where appropriate, so you can do this...\n\n```js\n// importer.js\nimport { named } from './exporter.js';\n\n// exporter.js\nmodule.exports = { named: 42 }; // or `exports.named = 42;`\n```\n\n...but that's not always possible:\n\n```js\n// importer.js\nimport { named } from 'my-lib';\n\n// my-lib.js\nvar myLib = exports;\nmyLib.named = 'you can\\'t see me';\n```\n\nIn those cases, you can specify custom named exports:\n\n```js\ncommonjs({\n  namedExports: {\n    // left-hand side can be an absolute path, a path\n    // relative to the current directory, or the name\n    // of a module in node_modules\n    'node_modules/my-lib/index.js': [ 'named' ]\n  }\n})\n```\n\n\n## Strict mode\n\nES modules are *always* parsed in strict mode. That means that certain non-strict constructs (like octal literals) will be treated as syntax errors when Rollup parses modules that use them. Some older CommonJS modules depend on those constructs, and if you depend on them your bundle will blow up. There's basically nothing we can do about that.\n\nLuckily, there is absolutely no good reason *not* to use strict mode for everything â€” so the solution to this problem is to lobby the authors of those modules to update them.\n\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rollup/rollup-plugin-commonjs.git"
  },
  "scripts": {
    "build": "rm -rf dist/* && rollup -c",
    "dev": "rollup -c -w",
    "lint": "eslint src",
    "posttest": "eslint src/*.js test/*.js",
    "prepublish": "npm run lint && npm test",
    "pretest": "npm run build",
    "test": "mocha"
  },
  "version": "8.0.2"
}

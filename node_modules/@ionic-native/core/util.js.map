{"version":3,"sources":["../../../src/@ionic-native/core/util.ts"],"names":[],"mappings":"AAEA;;GAEG;AACH,MAAM,cAAc,GAAG,EAAE,IAAI;IAC3B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACrC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC;QAAC,CAAC;QAC1B,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC;AAGD;;GAEG;AACH,MAAM,qBAAqB,EAAE;IAE3B,IAAM,gBAAgB,GAAG;QACvB,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACtB,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,CAAC,KAAK,CAAC,4LAA4L,CAAC,CAAC;QAC9M,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,CAAC,gBAAgB,EAAE,CAAC;AAC5B,CAAC;AAED;;;;GAIG;AACH,MAAM,oBAAoB,SAAiB;IACzC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AAChC,CAAC;AAAA,CAAC;AAEF;;GAEG;AACH,MAAM,CAAC,IAAM,UAAU,GAAG,UAAS,UAAkB,EAAE,MAAe,EAAE,MAAe;IACrF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,YAAY,GAAG,UAAU,GAAG,2BAA2B,CAAC,CAAC;IAC/H,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,UAAU,GAAG,kCAAkC,CAAC,CAAC;IACjG,CAAC;IACD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG,UAAU,GAAG,8BAA8B,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC;IAC7F,CAAC;AACH,CAAC,CAAC;AAEF;;;;GAIG;AACH,MAAM,CAAC,IAAM,WAAW,GAAG,UAAS,UAAkB,EAAE,MAAe;IACrE,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,UAAU,GAAG,GAAG,GAAG,MAAM,GAAG,8FAA8F,CAAC,CAAC;IACtK,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,CAAC,IAAI,CAAC,8BAA8B,GAAG,UAAU,GAAG,oGAAoG,CAAC,CAAC;IACnK,CAAC;AACH,CAAC,CAAC","file":"util.js","sourceRoot":"","sourcesContent":["declare var window: any;\r\n\r\n/**\r\n * @private\r\n */\r\nexport function get(obj, path) {\r\n  path = path.split('.');\r\n  for (let i = 0; i < path.length; i++) {\r\n    if (!obj) { return null; }\r\n    obj = obj[path[i]];\r\n  }\r\n  return obj;\r\n}\r\n\r\n\r\n/**\r\n * @private\r\n */\r\nexport function getPromise(cb) {\r\n\r\n  const tryNativePromise = () => {\r\n    if (window.Promise) {\r\n      return new Promise((resolve, reject) => {\r\n        cb(resolve, reject);\r\n      });\r\n    } else {\r\n      console.error('No Promise support or polyfill found. To enable Ionic Native support, please add the es6-promise polyfill before this script, or run with a library like Angular 2 or on a recent browser.');\r\n    }\r\n  };\r\n\r\n  return tryNativePromise();\r\n}\r\n\r\n/**\r\n * @private\r\n * @param pluginRef\r\n * @returns {null|*}\r\n */\r\nexport function getPlugin(pluginRef: string): any {\r\n  return get(window, pluginRef);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nexport const pluginWarn = function(pluginName: string, plugin?: string, method?: string) {\r\n  if (method) {\r\n    console.warn('Native: tried calling ' + pluginName + '.' + method + ', but the ' + pluginName + ' plugin is not installed.');\r\n  } else {\r\n    console.warn('Native: tried accessing the ' + pluginName + ' plugin but it\\'s not installed.');\r\n  }\r\n  if (plugin) {\r\n    console.warn('Install the ' + pluginName + ' plugin: \\'ionic plugin add ' + plugin + '\\'');\r\n  }\r\n};\r\n\r\n/**\r\n * @private\r\n * @param pluginName\r\n * @param method\r\n */\r\nexport const cordovaWarn = function(pluginName: string, method?: string) {\r\n  if (method) {\r\n    console.warn('Native: tried calling ' + pluginName + '.' + method + ', but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\r\n  } else {\r\n    console.warn('Native: tried accessing the ' + pluginName + ' plugin but Cordova is not available. Make sure to include cordova.js or run in a device/simulator');\r\n  }\r\n};\r\n"]}
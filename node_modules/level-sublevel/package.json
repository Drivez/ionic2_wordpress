{
  "_args": [
    [
      {
        "raw": "level-sublevel@^5.2.0",
        "scope": null,
        "escapedName": "level-sublevel",
        "name": "level-sublevel",
        "rawSpec": "^5.2.0",
        "spec": ">=5.2.0 <6.0.0",
        "type": "range"
      },
      "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/level-filesystem"
    ]
  ],
  "_from": "level-sublevel@>=5.2.0 <6.0.0",
  "_id": "level-sublevel@5.2.3",
  "_inCache": true,
  "_location": "/level-sublevel",
  "_npmUser": {
    "name": "dominictarr",
    "email": "dominic.tarr@gmail.com"
  },
  "_npmVersion": "1.4.25",
  "_phantomChildren": {
    "clone": "0.1.19",
    "foreach": "2.0.5",
    "indexof": "0.0.1",
    "is": "0.2.7",
    "is-object": "0.1.2"
  },
  "_requested": {
    "raw": "level-sublevel@^5.2.0",
    "scope": null,
    "escapedName": "level-sublevel",
    "name": "level-sublevel",
    "rawSpec": "^5.2.0",
    "spec": ">=5.2.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/level-filesystem"
  ],
  "_resolved": "https://registry.npmjs.org/level-sublevel/-/level-sublevel-5.2.3.tgz",
  "_shasum": "744c12c72d2e72be78dde3b9b5cd84d62191413a",
  "_shrinkwrap": null,
  "_spec": "level-sublevel@^5.2.0",
  "_where": "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/level-filesystem",
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "http://dominictarr.com"
  },
  "bugs": {
    "url": "https://github.com/dominictarr/level-sublevel/issues"
  },
  "dependencies": {
    "level-fix-range": "2.0",
    "level-hooks": ">=4.4.0 <5",
    "string-range": "~1.2.1",
    "xtend": "~2.0.4"
  },
  "description": "partition levelup databases",
  "devDependencies": {
    "level": "~0.15.0",
    "level-test": "~1.6.3",
    "monotonic-timestamp": "0.0.8",
    "pull-level": "~1.1.1",
    "pull-stream": "~2.18.2",
    "rimraf": "~2.1.4",
    "shasum": "0.0.2",
    "stream-to-pull-stream": "~1.2.0",
    "tape": "~1.0.4",
    "through": "~2.3.4"
  },
  "directories": {},
  "dist": {
    "shasum": "744c12c72d2e72be78dde3b9b5cd84d62191413a",
    "tarball": "https://registry.npmjs.org/level-sublevel/-/level-sublevel-5.2.3.tgz"
  },
  "gitHead": "e27d6bc1a5eaedf28312a2d3cb118615f87e1233",
  "homepage": "https://github.com/dominictarr/level-sublevel",
  "license": "MIT",
  "maintainers": [
    {
      "name": "dominictarr",
      "email": "dominic.tarr@gmail.com"
    }
  ],
  "name": "level-sublevel",
  "optionalDependencies": {},
  "readme": "# level-sublevel\n\nSeparate sections of levelup, with hooks!\n\n[![build status](https://secure.travis-ci.org/dominictarr/level-sublevel.png)](http://travis-ci.org/dominictarr/level-sublevel)\n\nThis module allows you to create seperate sections of a\n[levelup](https://github.com/rvagg/node-levelup) database,\nkinda like tables in an sql database, but evented, and ranged,\nfor real-time changing data.\n\n## Stability\n\nUnstable: Expect patches and features, possible api changes.\n\nThis is module is working well, but may change in the future as its use is futher explored.\n\n## Example\n\n``` js\nvar LevelUp = require('levelup')\nvar Sublevel = require('level-sublevel')\n\nvar db = Sublevel(LevelUp('/tmp/sublevel-example'))\nvar sub = db.sublevel('stuff')\n\n//put a key into the main levelup\ndb.put(key, value, function () {\n  \n})\n\n//put a key into the sub-section!\nsub.put(key2, value, function () {\n\n})\n```\n\nSublevel prefixes each subsection so that it will not collide\nwith the outer db when saving or reading!\n\n## Hooks\n\nHooks are specially built into Sublevel so that you can \ndo all sorts of clever stuff, like generating views or\nlogs when records are inserted!\n\nRecords added via hooks will be atomically inserted with the triggering change.\n\n### Hooks Example\n\nWhenever a record is inserted,\nsave an index to it by the time it was inserted.\n\n``` js\nvar sub = db.sublevel('SEQ')\n\ndb.pre(function (ch, add) {\n  add({\n    key: ''+Date.now(), \n    value: ch.key, \n    type: 'put',\n    prefix: sub //NOTE pass the destination db to add\n               //and the value will end up in that subsection!\n  })\n})\n\ndb.put('key', 'VALUE', function (err) {\n\n  //read all the records inserted by the hook!\n\n  sub.createReadStream()\n    .on('data', console.log)\n\n})\n```\n\nNotice that `sub` is the second argument to `add`,\nwhich tells the hook to save the new record in the `sub` section.\n\n## Batches\n\nIn `sublevel` batches also support a `prefix: subdb` property,\nif set, this row will be inserted into that database section,\ninstead of the current section.\n\n``` js\nvar sub1 = db.sublevel('SUB_1')\nvar sub2 = db.sublevel('SUM_2')\n\nsub.batch([\n  {key: 'key', value: 'Value', type: 'put'},\n  {key: 'key', value: 'Value', type: 'put', prefix: sub2},\n], function (err) {...})\n```\n\n## License\n\nMIT\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/dominictarr/level-sublevel.git"
  },
  "scripts": {
    "test": "set -e; for t in test/*.js; do node $t; done"
  },
  "stability": "unstable",
  "version": "5.2.3"
}

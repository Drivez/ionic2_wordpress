{
  "_args": [
    [
      {
        "raw": "babel-preset-babili@^0.0.10",
        "scope": null,
        "escapedName": "babel-preset-babili",
        "name": "babel-preset-babili",
        "rawSpec": "^0.0.10",
        "spec": ">=0.0.10 <0.0.11",
        "type": "range"
      },
      "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/babili"
    ]
  ],
  "_from": "babel-preset-babili@>=0.0.10 <0.0.11",
  "_id": "babel-preset-babili@0.0.10",
  "_inCache": true,
  "_location": "/babel-preset-babili",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/babel-preset-babili-0.0.10.tgz_1484678398939_0.37866883841343224"
  },
  "_npmUser": {
    "name": "kangax",
    "email": "kangax@gmail.com"
  },
  "_npmVersion": "3.10.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-preset-babili@^0.0.10",
    "scope": null,
    "escapedName": "babel-preset-babili",
    "name": "babel-preset-babili",
    "rawSpec": "^0.0.10",
    "spec": ">=0.0.10 <0.0.11",
    "type": "range"
  },
  "_requiredBy": [
    "/babili"
  ],
  "_resolved": "https://registry.npmjs.org/babel-preset-babili/-/babel-preset-babili-0.0.10.tgz",
  "_shasum": "59118924b77b898eecd8f75a5b97d694719443ff",
  "_shrinkwrap": null,
  "_spec": "babel-preset-babili@^0.0.10",
  "_where": "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/babili",
  "author": {
    "name": "amasad"
  },
  "bugs": {
    "url": "https://github.com/babel/babili/issues"
  },
  "dependencies": {
    "babel-plugin-minify-constant-folding": "^0.0.3",
    "babel-plugin-minify-dead-code-elimination": "^0.1.2",
    "babel-plugin-minify-flip-comparisons": "^0.0.2",
    "babel-plugin-minify-guarded-expressions": "^0.0.4",
    "babel-plugin-minify-infinity": "^0.0.3",
    "babel-plugin-minify-mangle-names": "^0.0.6",
    "babel-plugin-minify-numeric-literals": "^0.0.1",
    "babel-plugin-minify-replace": "^0.0.1",
    "babel-plugin-minify-simplify": "^0.0.6",
    "babel-plugin-minify-type-constructors": "^0.0.3",
    "babel-plugin-transform-inline-consecutive-adds": "^0.0.2",
    "babel-plugin-transform-member-expression-literals": "^6.8.1",
    "babel-plugin-transform-merge-sibling-variables": "^6.8.1",
    "babel-plugin-transform-minify-booleans": "^6.8.0",
    "babel-plugin-transform-property-literals": "^6.8.1",
    "babel-plugin-transform-regexp-constructors": "^0.0.5",
    "babel-plugin-transform-remove-console": "^6.8.0",
    "babel-plugin-transform-remove-debugger": "^6.8.0",
    "babel-plugin-transform-remove-undefined": "^0.0.4",
    "babel-plugin-transform-simplify-comparison-operators": "^6.8.1",
    "babel-plugin-transform-undefined-to-void": "^6.8.0",
    "lodash.isplainobject": "^4.0.6"
  },
  "description": "Babel preset for all minify plugins.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "59118924b77b898eecd8f75a5b97d694719443ff",
    "tarball": "https://registry.npmjs.org/babel-preset-babili/-/babel-preset-babili-0.0.10.tgz"
  },
  "homepage": "https://github.com/babel/babili#readme",
  "keywords": [
    "babel-preset"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "amasad",
      "email": "amjad.masad@gmail.com"
    },
    {
      "name": "boopathi",
      "email": "me@boopathi.in"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "kangax",
      "email": "kangax@gmail.com"
    }
  ],
  "name": "babel-preset-babili",
  "optionalDependencies": {},
  "readme": "# babel-preset-babili\n\nBabel preset for all minify plugins.\n\n+ [Install](#install)\n+ [Usage](#usage)\n+ [Options](#options)\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-babili\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"babili\"]\n}\n```\n\nor pass in options -\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"mangle\": {\n      \"blacklist\": [\"MyCustomError\"]\n    },\n    \"unsafe\": {\n      \"typeConstructors\": false\n    },\n    \"keepFnName\": true\n  }]]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets babili\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"babili\"]\n});\n```\n\n## Options\n\nAll options are **enabled** by default **except** the ones with explicit mention - `(Default: false)`\n\nThree types of options:\n\n### 1-1 mapping with plugin\n\n+ `false` to disable the plugin\n+ `true` to enable the plugin with default plugin specific options\n+ `{ ...pluginOpts }` to enable the plugin with custom plugin options\n\nThe following options have 1-1 mapping with a plugin,\n+ `evaluate` - [babel-plugin-minify-constant-folding](../../packages/babel-plugin-minify-constant-folding)\n+ `deadcode` - [babel-plugin-minify-dead-code-elimination](../../packages/babel-plugin-minify-dead-code-elimination)\n+ `infinity` - [babel-plugin-minify-infinity](../../packages/babel-plugin-minify-infinity)\n+ `mangle` - [babel-plugin-minify-mangle-names](../../packages/babel-plugin-minify-mangle-names)\n+ `numericLiterals` - [babel-plugin-minify-numeric-literals](../../packages/babel-plugin-minify-numeric-literals)\n+ `replace` - [babel-plugin-minify-replace](../../packages/babel-plugin-minify-replace)\n+ `simplify` - [babel-plugin-minify-simplify](../../packages/babel-plugin-minify-simplify)\n+ `mergeVars` - [babel-plugin-transform-merge-sibling-variables](../../packages/babel-plugin-transform-merge-sibling-variables)\n+ `booleans` - [babel-plugin-transform-minify-booleans](../../packages/babel-plugin-transform-minify-booleans)\n+ `regexpConstructors` - [babel-plugin-transform-regexp-constructors](../../packages/babel-plugin-transform-regexp-constructors)\n+ `removeConsole` - `(Default: false)` - [babel-plugin-transform-remove-console](../../packages/babel-plugin-transform-remove-console)\n+ `removeDebugger` - `(Default: false)` - [babel-plugin-transform-remove-debugger](../../packages/babel-plugin-transform-remove-debugger)\n+ `removeUndefined` - [babel-plugin-transform-remove-undefined](../../packages/babel-plugin-transform-remove-undefined)\n+ `undefinedToVoid` - [babel-plugin-transform-undefined-to-void](../../packages/babel-plugin-transform-undefined-to-void)\n\n**Examples**\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"evaluate\": false,\n    \"mangle\": true\n  }]]\n}\n```\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"mangle\": {\n      \"blacklist\": [\n        \"ParserError\",\n        \"NetworkError\"\n      ]\n    }\n  }]]\n}\n```\n\n### Option groups\n\n+ `false` to disable the entire group\n+ `true` to enable every plugin in the group\n+ `{ pluginKey: <1-1 mapping> }` - enable/disable a particular plugin in a group (or) pass options to that plugin\n\nThe following are groups of plugins -\n\n+ `unsafe`\n  + `flipComparisons` - [babel-plugin-minify-flip-comparisons](../../packages/babel-plugin-minify-flip-comparisons)\n  + `simplifyComparisons` - [babel-plugin-transform-simplify-comparison-operators](../../babel-plugin-transform-simplify-comparison-operators)\n  + `guards` - [babel-plugin-minify-guarded-expressions](../../packages/babel-plugin-minify-guarded-expressions)\n  + `typeConstructors` - [babel-plugin-minify-type-constructors](../../packages/babel-plugin-minify-type-constructors)\n+ `properties`\n  + `memberExpressions` - [babel-plugin-transform-member-expression-literals](../../packages/babel-plugin-transform-member-expression-literals)\n  + `propertyLiterals` - [babel-plugin-transform-property-literals](../../packages/babel-plugin-transform-property-literals)\n\n**Examples**\n\nDisables all unsafe plugins:\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"unsafe\": false\n  }]]\n}\n```\n\nDisables only minify-guarded-expressions, and enable all other unsafe plugins:\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"unsafe\": {\n      \"guards\": false\n    }\n  }]]\n}\n```\n\n### Passing same plugin options to multiple plugins\n\nIn babili, multiple plugins require the same set of options and it is easier to mention it in one place instead of two.\n\n+ `keepFnName` - This will be passed to `mangle` and `deadcode` and will NOT be overriden if the same option exists under either mangle or deadcode.\n\n**Examples**\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"keepFnName\": true\n  }]]\n}\n```\n\nis the same as,\n\nPlugins applied:\n\n```json\n{\n  \"presets\": [[\"babili\", {\n    \"mangle\": {\n      \"keepFnName\": true\n    },\n    \"deadcode\": {\n      \"keepFnName\": true\n    }\n  }]]\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babili/tree/master/packages/babel-preset-babili"
  },
  "scripts": {},
  "version": "0.0.10"
}

{
  "_args": [
    [
      {
        "raw": "abstract-leveldown@~0.12.0",
        "scope": null,
        "escapedName": "abstract-leveldown",
        "name": "abstract-leveldown",
        "rawSpec": "~0.12.0",
        "spec": ">=0.12.0 <0.13.0",
        "type": "range"
      },
      "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/level-js"
    ]
  ],
  "_from": "abstract-leveldown@>=0.12.0 <0.13.0",
  "_id": "abstract-leveldown@0.12.4",
  "_inCache": true,
  "_location": "/abstract-leveldown",
  "_npmUser": {
    "name": "rvagg",
    "email": "rod@vagg.org"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "abstract-leveldown@~0.12.0",
    "scope": null,
    "escapedName": "abstract-leveldown",
    "name": "abstract-leveldown",
    "rawSpec": "~0.12.0",
    "spec": ">=0.12.0 <0.13.0",
    "type": "range"
  },
  "_requiredBy": [
    "/deferred-leveldown",
    "/level-js"
  ],
  "_resolved": "https://registry.npmjs.org/abstract-leveldown/-/abstract-leveldown-0.12.4.tgz",
  "_shasum": "29e18e632e60e4e221d5810247852a63d7b2e410",
  "_shrinkwrap": null,
  "_spec": "abstract-leveldown@~0.12.0",
  "_where": "/Users/Marius/Dropbox/Privat/Projects/ByggStandard/node_modules/level-js",
  "browser": {
    "rimraf": false
  },
  "bugs": {
    "url": "https://github.com/rvagg/node-abstract-leveldown/issues"
  },
  "contributors": [
    {
      "name": "Rod Vagg",
      "email": "r@va.gg",
      "url": "https://github.com/rvagg"
    },
    {
      "name": "John Chesley",
      "email": "john@chesl.es",
      "url": "https://github.com/chesles/"
    },
    {
      "name": "Jake Verbaten",
      "email": "raynos2@gmail.com",
      "url": "https://github.com/raynos"
    },
    {
      "name": "Dominic Tarr",
      "email": "dominic.tarr@gmail.com",
      "url": "https://github.com/dominictarr"
    },
    {
      "name": "Max Ogden",
      "email": "max@maxogden.com",
      "url": "https://github.com/maxogden"
    },
    {
      "name": "Lars-Magnus Skog",
      "email": "lars.magnus.skog@gmail.com",
      "url": "https://github.com/ralphtheninja"
    },
    {
      "name": "David BjÃ¶rklund",
      "email": "david.bjorklund@gmail.com",
      "url": "https://github.com/kesla"
    },
    {
      "name": "Julian Gruber",
      "email": "julian@juliangruber.com",
      "url": "https://github.com/juliangruber"
    },
    {
      "name": "Paolo Fragomeni",
      "email": "paolo@async.ly",
      "url": "https://github.com/hij1nx"
    },
    {
      "name": "Anton Whalley",
      "email": "anton.whalley@nearform.com",
      "url": "https://github.com/No9"
    },
    {
      "name": "Matteo Collina",
      "email": "matteo.collina@gmail.com",
      "url": "https://github.com/mcollina"
    },
    {
      "name": "Pedro Teixeira",
      "email": "pedro.teixeira@gmail.com",
      "url": "https://github.com/pgte"
    },
    {
      "name": "James Halliday",
      "email": "mail@substack.net",
      "url": "https://github.com/substack"
    }
  ],
  "dependencies": {
    "xtend": "~3.0.0"
  },
  "description": "An abstract prototype matching the LevelDOWN API",
  "devDependencies": {
    "rimraf": "*",
    "sinon": "*",
    "tap": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "29e18e632e60e4e221d5810247852a63d7b2e410",
    "tarball": "https://registry.npmjs.org/abstract-leveldown/-/abstract-leveldown-0.12.4.tgz"
  },
  "gitHead": "7be6adfe726ccb23e52fd803ade008e85f072cd3",
  "homepage": "https://github.com/rvagg/node-abstract-leveldown",
  "keywords": [
    "leveldb",
    "leveldown",
    "levelup"
  ],
  "license": "MIT",
  "main": "./abstract-leveldown.js",
  "maintainers": [
    {
      "name": "rvagg",
      "email": "rod@vagg.org"
    }
  ],
  "name": "abstract-leveldown",
  "optionalDependencies": {},
  "readme": "# Abstract LevelDOWN [![Build Status](https://secure.travis-ci.org/rvagg/abstract-leveldown.png)](http://travis-ci.org/rvagg/abstract-leveldown)\n\n[![NPM](https://nodei.co/npm/abstract-leveldown.png?downloads=true&downloadRank=true)](https://nodei.co/npm/abstract-leveldown/)\n[![NPM](https://nodei.co/npm-dl/abstract-leveldown.png?months=6&height=3)](https://nodei.co/npm/abstract-leveldown/)\n\nAn abstract prototype matching the **[LevelDOWN](https://github.com/rvagg/node-leveldown/)** API. Useful for extending **[LevelUP](https://github.com/rvagg/node-levelup)** functionality by providing a replacement to LevelDOWN.\n\nAs of version 0.7, LevelUP allows you to pass a `'db'` option when you create a new instance. This will override the default LevelDOWN store with a LevelDOWN API compatible object.\n\n**Abstract LevelDOWN** provides a simple, operational *noop* base prototype that's ready for extending. By default, all operations have sensible \"noops\" (operations that essentially do nothing). For example, simple operations such as `.open(callback)` and `.close(callback)` will simply invoke the callback (on a *next tick*). More complex operations  perform sensible actions, for example: `.get(key, callback)` will always return a `'NotFound'` `Error` on the callback.\n\nYou add functionality by implementing the underscore versions of the operations. For example, to implement a `put()` operation you add a `_put()` method to your object. Each of these underscore methods override the default *noop* operations and are always provided with **consistent arguments**, regardless of what is passed in by the client.\n\nAdditionally, all methods provide argument checking and sensible defaults for optional arguments. All bad-argument errors are compatible with LevelDOWN (they pass the LevelDOWN method arguments tests). For example, if you call `.open()` without a callback argument you'll get an `Error('open() requires a callback argument')`. Where optional arguments are involved, your underscore methods will receive sensible defaults. A `.get(key, callback)` will pass through to a `._get(key, options, callback)` where the `options` argument is an empty object.\n\n## Example\n\nA simplistic in-memory LevelDOWN replacement\n\n```js\nvar util = require('util')\n  , AbstractLevelDOWN = require('./').AbstractLevelDOWN\n\n// constructor, passes through the 'location' argument to the AbstractLevelDOWN constructor\nfunction FakeLevelDOWN (location) {\n  AbstractLevelDOWN.call(this, location)\n}\n\n// our new prototype inherits from AbstractLevelDOWN\nutil.inherits(FakeLevelDOWN, AbstractLevelDOWN)\n\n// implement some methods\n\nFakeLevelDOWN.prototype._open = function (options, callback) {\n  // initialise a memory storage object\n  this._store = {}\n  // optional use of nextTick to be a nice async citizen\n  process.nextTick(function () { callback(null, this) }.bind(this))\n}\n\nFakeLevelDOWN.prototype._put = function (key, value, options, callback) {\n  key = '_' + key // safety, to avoid key='__proto__'-type skullduggery \n  this._store[key] = value\n  process.nextTick(callback)\n}\n\nFakeLevelDOWN.prototype._get = function (key, options, callback) {\n  var value = this._store['_' + key]\n  if (value === undefined) {\n    // 'NotFound' error, consistent with LevelDOWN API\n    return process.nextTick(function () { callback(new Error('NotFound')) })\n  }\n  process.nextTick(function () {\n    callback(null, value)\n  })\n}\n\nFakeLevelDOWN.prototype._del = function (key, options, callback) {\n  delete this._store['_' + key]\n  process.nextTick(callback)\n}\n\n// now use it in LevelUP\n\nvar levelup = require('levelup')\n\nvar db = levelup('/who/cares/', {\n  // the 'db' option replaces LevelDOWN\n  db: function (location) { return new FakeLevelDOWN(location) }\n})\n\ndb.put('foo', 'bar', function (err) {\n  if (err) throw err\n  db.get('foo', function (err, value) {\n    if (err) throw err\n    console.log('Got foo =', value)\n  })\n})\n```\n\nSee [MemDOWN](https://github.com/rvagg/memdown/) if you are looking for a complete in-memory replacement for LevelDOWN.\n\n## Extensible API\n\nRemember that each of these methods, if you implement them, will receive exactly the number and order of arguments described. Optional arguments will be converted to sensible defaults.\n\n### AbstractLevelDOWN(location)\n### AbstractLevelDOWN#_open(options, callback)\n### AbstractLevelDOWN#_close(callback)\n### AbstractLevelDOWN#_get(key, options, callback)\n### AbstractLevelDOWN#_put(key, value, options, callback)\n### AbstractLevelDOWN#_del(key, options, callback)\n### AbstractLevelDOWN#_batch(array, options, callback)\n\nIf `batch()` is called without argument or with only an options object then it should return a `Batch` object with chainable methods. Otherwise it will invoke a classic batch operation.\n\n### AbstractLevelDOWN#_chainedBatch()\n\nBy default an `batch()` operation without argument returns a blank `AbstractChainedBatch` object. The prototype is available on the main exports for you to extend. If you want to implement chainable batch operations then you should extend the `AbstractChaindBatch` and return your object in the `_chainedBatch()` method.\n\n### AbstractLevelDOWN#_approximateSize(start, end, callback)\n### AbstractLevelDOWN#_iterator(options)\n\nBy default an `iterator()` operation returns a blank `AbstractIterator` object. The prototype is available on the main exports for you to extend. If you want to implement iterator operations then you should extend the `AbstractIterator` and return your object in the `_iterator(options)` method.\n\n`AbstractIterator` implements the basic state management found in LevelDOWN. It keeps track of when a `next()` is in progress and when an `end()` has been called so it doesn't allow concurrent `next()` calls, it does it allow `end()` while a `next()` is in progress and it doesn't allow either `next()` or `end()` after `end()` has been called.\n\n### AbstractIterator(db)\n\nProvided with the current instance of `AbstractLevelDOWN` by default.\n\n### AbstractIterator#_next(callback)\n### AbstractIterator#_end(callback)\n\n### AbstractChainedBatch\nProvided with the current instance of `AbstractLevelDOWN` by default.\n\n### AbstractChainedBatch#_put(key, value)\n### AbstractChainedBatch#_del(key)\n### AbstractChainedBatch#_clear()\n### AbstractChainedBatch#_write(options, callback)\n\n<a name=\"contributing\"></a>\nContributing\n------------\n\nAbstract LevelDOWN is an **OPEN Open Source Project**. This means that:\n\n> Individuals making significant and valuable contributions are given commit-access to the project to contribute as they see fit. This project is more like an open wiki than a standard guarded open source project.\n\nSee the [CONTRIBUTING.md](https://github.com/rvagg/node-levelup/blob/master/CONTRIBUTING.md) file for more details.\n\n### Contributors\n\nAbstract LevelDOWN is only possible due to the excellent work of the following contributors:\n\n<table><tbody>\n<tr><th align=\"left\">Rod Vagg</th><td><a href=\"https://github.com/rvagg\">GitHub/rvagg</a></td><td><a href=\"http://twitter.com/rvagg\">Twitter/@rvagg</a></td></tr>\n<tr><th align=\"left\">John Chesley</th><td><a href=\"https://github.com/chesles/\">GitHub/chesles</a></td><td><a href=\"http://twitter.com/chesles\">Twitter/@chesles</a></td></tr>\n<tr><th align=\"left\">Jake Verbaten</th><td><a href=\"https://github.com/raynos\">GitHub/raynos</a></td><td><a href=\"http://twitter.com/raynos2\">Twitter/@raynos2</a></td></tr>\n<tr><th align=\"left\">Dominic Tarr</th><td><a href=\"https://github.com/dominictarr\">GitHub/dominictarr</a></td><td><a href=\"http://twitter.com/dominictarr\">Twitter/@dominictarr</a></td></tr>\n<tr><th align=\"left\">Max Ogden</th><td><a href=\"https://github.com/maxogden\">GitHub/maxogden</a></td><td><a href=\"http://twitter.com/maxogden\">Twitter/@maxogden</a></td></tr>\n<tr><th align=\"left\">Lars-Magnus Skog</th><td><a href=\"https://github.com/ralphtheninja\">GitHub/ralphtheninja</a></td><td><a href=\"http://twitter.com/ralphtheninja\">Twitter/@ralphtheninja</a></td></tr>\n<tr><th align=\"left\">David BjÃ¶rklund</th><td><a href=\"https://github.com/kesla\">GitHub/kesla</a></td><td><a href=\"http://twitter.com/david_bjorklund\">Twitter/@david_bjorklund</a></td></tr>\n<tr><th align=\"left\">Julian Gruber</th><td><a href=\"https://github.com/juliangruber\">GitHub/juliangruber</a></td><td><a href=\"http://twitter.com/juliangruber\">Twitter/@juliangruber</a></td></tr>\n<tr><th align=\"left\">Paolo Fragomeni</th><td><a href=\"https://github.com/hij1nx\">GitHub/hij1nx</a></td><td><a href=\"http://twitter.com/hij1nx\">Twitter/@hij1nx</a></td></tr>\n<tr><th align=\"left\">Anton Whalley</th><td><a href=\"https://github.com/No9\">GitHub/No9</a></td><td><a href=\"https://twitter.com/antonwhalley\">Twitter/@antonwhalley</a></td></tr>\n<tr><th align=\"left\">Matteo Collina</th><td><a href=\"https://github.com/mcollina\">GitHub/mcollina</a></td><td><a href=\"https://twitter.com/matteocollina\">Twitter/@matteocollina</a></td></tr>\n<tr><th align=\"left\">Pedro Teixeira</th><td><a href=\"https://github.com/pgte\">GitHub/pgte</a></td><td><a href=\"https://twitter.com/pgte\">Twitter/@pgte</a></td></tr>\n<tr><th align=\"left\">James Halliday</th><td><a href=\"https://github.com/substack\">GitHub/substack</a></td><td><a href=\"https://twitter.com/substack\">Twitter/@substack</a></td></tr>\n</tbody></table>\n\n<a name=\"license\"></a>\nLicense &amp; copyright\n-------------------\n\nCopyright (c) 2012-2014 Abstract LevelDOWN contributors (listed above).\n\nAbstract LevelDOWN is licensed under the MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE.md file for more details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rvagg/node-abstract-leveldown.git"
  },
  "scripts": {
    "test": "node ./test.js"
  },
  "version": "0.12.4"
}
